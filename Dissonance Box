import arcade

#Screen setup
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
SCREEN_TITLE = "Ludoarrative dissonance as a tool"


#Player values
PLAYER_SIZE = 50
PLAYER_COLOR = arcade.color.RED





"""
##################################################################
class Free:


    def __init__(self):

        # Set up attribute variables

        self.size = PLAYER_SIZE
        # Where we are
        self.center_x = 0
        self.center_y = 0

        # Where we are going
        self.change_x = 0
        self.change_y = 0

    def update(self):
        # Moves the player
        self.center_x += self.change_x
        self.center_y += self.change_y

        # Styre kollison med v√¶ggen
        self.center_x += self.change_x
        self.center_y += self.change_y

        if self.center_x < self.size:
            self.change_x *= -1
        if self.center_x > SCREEN_WIDTH - self.size:
            self.change_x *= -1
        if self.center_y > SCREEN_HEIGHT - self.size:
            self.change_y *= -1

    def draw(self):
        # Draw the rectangle
        arcade.draw_rectangle_filled(self.center_x, self.center_y,PLAYER_SIZE, PLAYER_SIZE, PLAYER_COLOR)


class MyGame(arcade.Window):


    def __init__(self):
        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_TITLE)

        # Create Player
        self.free = Free()
        self.free.center_x = 300
        self.free.center_y = 300
        self.free.change_x = 5
        self.free.change_y = 2

        # Set background color
        self.background_color = arcade.color.BLACK

    def on_update(self, delta_time):
        # Move the rectangle
        self.free.update()

    def on_draw(self):
        # Clear screen
        self.clear()
        self.tekst = arcade.Text(
            text="Free from control",
            start_x=SCREEN_WIDTH / 2,
            start_y=SCREEN_HEIGHT * 2 / 3,
            color=arcade.color.WHITE,
            font_size=30,
            anchor_x="center"
        )
        self.tekst.draw()

        # Draw the player
        self.free.draw()



#################################################################
"""


class MyGame(arcade.Window):
    def __init__(self):

        #Call the parent class initializer
        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_TITLE)


        self.player = arcade.SpriteSolidColor(50, 50, PLAYER_COLOR)

        # Don't show the mouse cursor
        self.set_mouse_visible(False)

        arcade.set_background_color(arcade.color.BLACK)

    def setup(self):


        # Set up the player
        self.player.center_x = 100
        self.player.center_y = 100
        self.player.size = 50



    def on_draw(self):
        self.clear()
        self.player.draw()

        self.tekst = arcade.Text(
            text="Break free, use the source",
            start_x= SCREEN_WIDTH / 2,
            start_y=SCREEN_HEIGHT * 2 / 3,
            color=arcade.color.WHITE,
            font_size=30,
            anchor_x="center"
        )
        self.tekst.draw()


    def on_mouse_motion(self, x, y, dx, dy):

        # Move the center of the player sprite to match the mouse x, y
        self.player.center_x = x
        self.player.center_y = y

    def on_update(self, delta_tid):
        # Opdaterer
        self.player.update()


########################################################################################

def main():
    """Main function"""
    window = MyGame()
    #window.setup()

    #keeps the game running
    arcade.run()


if __name__ == "__main__":
    main()
